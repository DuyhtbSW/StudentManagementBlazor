@page "/Country/edit/{id:int}"
@using StudentManagement.Shared.Models
@inject NavigationManager navigation;
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IJSRuntime JsRuntime
<h3>Update Country</h3>
<hr />
<div class="row">
    <div class="col-md-12">
        <EditForm Model="countryobj" OnValidSubmit="UpdateCountry" FormName="updatecountry">

            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Country Code </label>
                            <InputText for="Code" class="form-control" @bind-Value="@countryobj.Code"></InputText>
                            <ValidationMessage For="() => countryobj.Code" />

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Country Name </label>
                            <InputText for="Name" class="form-control" @bind-Value="@countryobj.Name"></InputText>
                            <ValidationMessage For="() => countryobj.Name" />

                        </div>
                    </div>
                   
                </div>
                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary"> Save Country</button>
                    <button type="submit" @onclick="()=>Cancel()" class="btn btn-danger"> Cancel</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    public Country countryobj { get; set; } = new();

    [Parameter]
    public int id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadCountry();
    }


    public async Task LoadCountry()
    {
        // var students = await GenericService.GetAllAsync(student, "api/Student/All-Students");
        countryobj = await CountryService.GetByIdAsync(id);




    }
    protected async Task UpdateCountry()
    {
        var result = await CountryService.UpdateAsync(countryobj);
        navigation.NavigateTo("/countries-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/countries-list");
    }
}
