@page "/student/delete/{id:int}"
@using StudentManagement.Shared.Models
@inject NavigationManager navigation;
@rendermode InteractiveServer

@inject IJSRuntime JsRuntime
<h3>Delete Student</h3>

<hr />
<div class="row" >

    <div class="col-md-12">
        <table class="table">
            <tr>
                <th>Email</th>
                <td>@studobj.Email</td>
            </tr>
        </table>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" @onclick="Delete">Delete Student</button>
        <button type="button" class="btn btn-danger">Cancel</button>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    public Student studobj { get; set; } = new();

    [Parameter]
    public int id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await LoadStudents();
    }


    public async Task LoadStudents()
    {
        // var students = await GenericService.GetAllAsync(student, "api/Student/All-Students");
        studobj = await StudentService.GetStudentByIdAsync(id);




    }
    protected async Task Delete()
    {
        var result = await StudentService.DeleteStudentAsync(id);
        navigation.NavigateTo("/students-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/students-list");
    }
}
