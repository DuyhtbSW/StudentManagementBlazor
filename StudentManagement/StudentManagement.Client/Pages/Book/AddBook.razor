@page "/add-book"
@using StudentManagement.Shared.Models
@inject NavigationManager navigation;
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Add New Book</h3>
            </div>
            <div class="card-body">
                <EditForm Model="bookobj" OnValidSubmit="CreateBook" FormName="addBook">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Book Name</label>
                                    <InputText for="Name" class="form-control" @bind-Value="@bookobj.Name" />
                                    <ValidationMessage For="()=>bookobj.Name" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Book Auther</label>
                                    <InputText for="Auther" class="form-control" @bind-Value="@bookobj.Auther" />
                                    <ValidationMessage For="()=>bookobj.Auther" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Book Copies</label>
                                    <InputNumber for="NoOfCopy" class="form-control" @bind-Value="@bookobj.NoOfCopy" />
                                    <ValidationMessage For="()=>bookobj.NoOfCopy" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Book Category</label>
                                    <InputSelect for="BookCategoryId" class="form-control" @bind-Value="@bookobj.BookCategoryId">
                                        <option value="">Select Category</option>
                                        @foreach (var category in BookCategories)
                                        {
                                            <option value="@category.id">@category.Description</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="() => bookobj.BookCategoryId" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Save Book</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    public Book bookobj { get; set; } = new();
    List<SystemCodeDetail> BookCategories = new List<SystemCodeDetail>();

    protected override async Task OnInitializedAsync()
    {
        BookCategories = await SystemCodeDetailService.GetByCodeAsync("BookCategory");
    }
    protected async Task CreateBook()
    {

        var result = BookService.AddAsync(bookobj);
        navigation.NavigateTo("/books-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/books-list");
    }
}
