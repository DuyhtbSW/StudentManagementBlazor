@page "/add-parent"
@using StudentManagement.Shared.Models
@rendermode InteractiveAuto
@inject NavigationManager navigation;
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

@inject IJSRuntime JsRuntime
<h3>Add Parent</h3>
<hr />
<div class="row">
    <div class="col-md-12">
        <EditForm Model="parentobj" OnValidSubmit="CreateParent" FormName="addparent">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> First Name </label>
                            <InputText id="FirstName" class="form-control" @bind-Value="parentobj.FirstName"></InputText>
                            <ValidationMessage For="() => parentobj.FirstName" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Middle Name </label>
                            <InputText id="MiddleName" class="form-control" @bind-Value="parentobj.MiddleName"></InputText>
                            <ValidationMessage For="() => parentobj.MiddleName" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Last Name </label>
                            <InputText id="LastName" class="form-control" @bind-Value="parentobj.LastName"></InputText>
                            <ValidationMessage For="() => parentobj.LastName" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Email </label>
                            <InputText id="EmailAddress" class="form-control" @bind-Value="parentobj.EmailAddress"></InputText>
                            <ValidationMessage For="() => parentobj.EmailAddress" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Phone</label>
                            <InputText id="PhoneNumber" class="form-control" @bind-Value="parentobj.PhoneNumber"></InputText>
                            <ValidationMessage For="() => parentobj.PhoneNumber" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Address</label>
                            <InputText id="Address" class="form-control" @bind-Value="parentobj.Address"></InputText>
                            <ValidationMessage For="() => parentobj.Address" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Gender</label>
                            <InputSelect id="GenderId" class="form-control" @bind-Value="parentobj.GenderId">
                                <option value="">Select Gender</option>
                                @if (Gender != null && Gender.Any())
                                {
                                    @foreach (var sex in Gender)
                                    {
                                        <option value="@sex.id">@sex.Description</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="() => parentobj.GenderId" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Student</label>
                            <InputSelect id="StudentId" class="form-control" @bind-Value="parentobj.StudentId">
                                <option value="">Select Student</option>
                                @foreach (var student in Student)
                                {
                                    <option value="@student.Id">@student.FullName</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => parentobj.StudentId" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label"> Parent Type</label>
                            <InputSelect id="ParentTypeId" class="form-control" @bind-Value="parentobj.ParentTypeId">
                                <option value="">Select Parent Type</option>
                                @foreach (var type in ParentType)
                                {
                                    <option value="@type.id">@type.Description</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => parentobj.ParentTypeId" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Date of Birth</label>
                            <InputDate id="DOB" class="form-control" @bind-Value="parentobj.DOB" />
                            <ValidationMessage For="() => parentobj.DOB" />
                        </div>
                    </div>
                </div>
                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary"> Save Parent</button>
                    <button type="button" @onclick="Cancel" class="btn btn-danger"> Cancel</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public Parent parentobj { get; set; } = new();

    public List<SystemCodeDetail> ParentType = new List<SystemCodeDetail>();
    public List<SystemCodeDetail> Gender = new List<SystemCodeDetail>();
    public List<Student> Student = new List<Student>();

    protected override async Task OnInitializedAsync()
    {
        ParentType = await SystemCodeDetailService.GetByCodeAsync("ParentType");
        Gender = await SystemCodeDetailService.GetByCodeAsync("Gender");
        Student = await StudentService.GetAllStudentsAsync();
    }

    protected async Task CreateParent()
    {
        var result = await ParentService.AddAsync(parentobj);
        navigation.NavigateTo("/parents-list");
    }

    public void Cancel()
    {
        navigation.NavigateTo("/parents-list");
    }
}
